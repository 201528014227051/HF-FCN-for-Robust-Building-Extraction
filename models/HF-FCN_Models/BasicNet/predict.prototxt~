name: "BuildingDetection_deploy"
input: "input_sat"
input_dim: 1
input_dim: 3
input_dim: 256
input_dim: 256

layer { bottom: 'input_sat' top: 'conv1_1' name: 'conv1_1' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 64 pad: 35 kernel_size: 3 } }
layer { bottom: 'conv1_1' top: 'conv1_1' name: 'relu1_1' type: "ReLU" }
layer { bottom: 'conv1_1' top: 'conv1_2' name: 'conv1_2' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv1_2' top: 'conv1_2' name: 'relu1_2' type: "ReLU" }
layer { name: 'pool1' bottom: 'conv1_2' top: 'pool1' type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }

layer { name: 'conv2_1' bottom: 'pool1' top: 'conv2_1' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv2_1' top: 'conv2_1' name: 'relu2_1' type: "ReLU" }
layer { bottom: 'conv2_1' top: 'conv2_2' name: 'conv2_2' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv2_2' top: 'conv2_2' name: 'relu2_2' type: "ReLU" }
layer { bottom: 'conv2_2' top: 'pool2' name: 'pool2' type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }

layer { bottom: 'pool2' top: 'conv3_1' name: 'conv3_1' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv3_1' top: 'conv3_1' name: 'relu3_1' type: "ReLU" }
layer { bottom: 'conv3_1' top: 'conv3_2' name: 'conv3_2' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv3_2' top: 'conv3_2' name: 'relu3_2' type: "ReLU" }
layer { bottom: 'conv3_2' top: 'conv3_3' name: 'conv3_3' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv3_3' top: 'conv3_3' name: 'relu3_3' type: "ReLU" }
layer { bottom: 'conv3_3' top: 'pool3' name: 'pool3' type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }

layer { bottom: 'pool3' top: 'conv4_1' name: 'conv4_1' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv4_1' top: 'conv4_1' name: 'relu4_1' type: "ReLU" }
layer { bottom: 'conv4_1' top: 'conv4_2' name: 'conv4_2' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv4_2' top: 'conv4_2' name: 'relu4_2' type: "ReLU" }
layer { bottom: 'conv4_2' top: 'conv4_3' name: 'conv4_3' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv4_3' top: 'conv4_3' name: 'relu4_3' type: "ReLU" }
layer { bottom: 'conv4_3' top: 'pool4' name: 'pool4' type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }

layer { bottom: 'pool4' top: 'conv5_1' name: 'conv5_1' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv5_1' top: 'conv5_1' name: 'relu5_1' type: "ReLU" }
layer { bottom: 'conv5_1' top: 'conv5_2' name: 'conv5_2' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv5_2' top: 'conv5_2' name: 'relu5_2' type: "ReLU" }
layer { bottom: 'conv5_2' top: 'conv5_3' name: 'conv5_3' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv5_3' top: 'conv5_3' name: 'relu5_3' type: "ReLU" }

## DSN conv 1_1 ###
layer { name: 'score-dsn1_1' type: "Convolution" bottom: 'conv1_1' top: 'score-dsn1_1-up'
  	param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  	convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#layer { name : "dropout" bottom: "score-dsn1_1-up" top: "score-dsn1_1-up" type: "Dropout"
	#dropout_param { dropout_ratio: 0.5}}
layer { type: "Crop" name: 'crop' bottom: 'score-dsn1_1-up' bottom: 'input_sat' top: 'upscore-dsn1_1' }

### DSN conv 1_2 ###
layer { name: 'score-dsn1_2' type: "Convolution" bottom: 'conv1_2' top: 'score-dsn1_2-up'
  	param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  	convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#layer { name : "dropout" bottom: "score-dsn1_2-up" top: "score-dsn1_2-up" type: "Dropout"
	#dropout_param { dropout_ratio: 0.5}}
layer { type: "Crop" name: 'crop' bottom: 'score-dsn1_2-up' bottom: 'input_sat' top: 'upscore-dsn1_2' }

### DSN conv 2_1 ###
layer { name: 'score-dsn2_1' type: "Convolution" bottom: 'conv2_1' top: 'score-dsn2_1'
  	param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  	convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#layer { name : "dropout" bottom: "score-dsn2_1" top: "score-dsn2_1" type: "Dropout"
	#dropout_param { dropout_ratio: 0.5}}
layer { type: "Deconvolution" name: 'upsample_2-2_1' bottom: 'score-dsn2_1' top: 'score-dsn2_1-up'
  	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
 	convolution_param { kernel_size: 4 stride: 2 num_output: 1 } }
layer { type: "Crop" name: 'crop' bottom: 'score-dsn2_1-up' bottom: 'input_sat' top: 'upscore-dsn2_1' }

### DSN conv 2_2 ###
layer { name: 'score-dsn2_2' type: "Convolution" bottom: 'conv2_2' top: 'score-dsn2_2'
  	param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  	convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#layer { name : "dropout" bottom: "score-dsn2_2" top: "score-dsn2_2" type: "Dropout"
	#dropout_param { dropout_ratio: 0.5}}
layer { type: "Deconvolution" name: 'upsample_2-2_2' bottom: 'score-dsn2_2' top: 'score-dsn2_2-up'
  	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
 	convolution_param { kernel_size: 4 stride: 2 num_output: 1 } }
layer { type: "Crop" name: 'crop' bottom: 'score-dsn2_2-up' bottom: 'input_sat' top: 'upscore-dsn2_2' }

### DSN conv 3_1 ###
layer { name: 'score-dsn3_1' type: "Convolution" bottom: 'conv3_1' top: 'score-dsn3_1'
  	param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  	convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#layer { name : "dropout" bottom: "score-dsn3_1" top: "score-dsn3_1" type: "Dropout"
	#dropout_param { dropout_ratio: 0.5}}
layer { type: "Deconvolution" name: 'upsample_4-3_1' bottom: 'score-dsn3_1' top: 'score-dsn3_1-up'
  	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
 	convolution_param { kernel_size: 8 stride: 4 num_output: 1 } }
layer { type: "Crop" name: 'crop' bottom: 'score-dsn3_1-up' bottom: 'input_sat' top: 'upscore-dsn3_1' }

### DSN conv 3_2 ###
layer { name: 'score-dsn3_2' type: "Convolution" bottom: 'conv3_2' top: 'score-dsn3_2'
  	param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  	convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#layer { name : "dropout" bottom: "score-dsn3_2" top: "score-dsn3_2" type: "Dropout"
	#dropout_param { dropout_ratio: 0.5}}
layer { type: "Deconvolution" name: 'upsample_4-3_2' bottom: 'score-dsn3_2' top: 'score-dsn3_2-up'
  	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
 	convolution_param { kernel_size: 8 stride: 4 num_output: 1 } }
layer { type: "Crop" name: 'crop' bottom: 'score-dsn3_2-up' bottom: 'input_sat' top: 'upscore-dsn3_2' }

### DSN conv 3_3 ###
layer { name: 'score-dsn3_3' type: "Convolution" bottom: 'conv3_3' top: 'score-dsn3_3'
  	param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  	convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#layer { name : "dropout" bottom: "score-dsn3_3" top: "score-dsn3_3" type: "Dropout"
	#dropout_param { dropout_ratio: 0.5}}
layer { type: "Deconvolution" name: 'upsample_4-3_3' bottom: 'score-dsn3_3' top: 'score-dsn3_3-up'
  	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
 	convolution_param { kernel_size: 8 stride: 4 num_output: 1 } }
layer { type: "Crop" name: 'crop' bottom: 'score-dsn3_3-up' bottom: 'input_sat' top: 'upscore-dsn3_3' }

###DSN conv 4_1 ###
layer { name: 'score-dsn4_1' type: "Convolution" bottom: 'conv4_1' top: 'score-dsn4_1'
  	param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  	convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#layer { name : "dropout" bottom: "score-dsn4_1" top: "score-dsn4_1" type: "Dropout"
 	# dropout_param { dropout_ratio: 0.5}}
layer { type: "Deconvolution" name: 'upsample_8-4_1' bottom: 'score-dsn4_1' top: 'score-dsn4_1-up'
  	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  	convolution_param { kernel_size: 16 stride: 8 num_output: 1 } }
layer { type: "Crop" name: 'crop' bottom: 'score-dsn4_1-up' bottom: 'input_sat' top: 'upscore-dsn4_1' }

###DSN conv 4_2 ###
layer { name: 'score-dsn4_2' type: "Convolution" bottom: 'conv4_2' top: 'score-dsn4_2'
  	param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  	convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#layer { name : "dropout" bottom: "score-dsn4_2" top: "score-dsn4_2" type: "Dropout"
 	# dropout_param { dropout_ratio: 0.5}}
layer { type: "Deconvolution" name: 'upsample_8-4_2' bottom: 'score-dsn4_2' top: 'score-dsn4_2-up'
  	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  	convolution_param { kernel_size: 16 stride: 8 num_output: 1 } }
layer { type: "Crop" name: 'crop' bottom: 'score-dsn4_2-up' bottom: 'input_sat' top: 'upscore-dsn4_2' }


###DSN conv 4_3 ###
layer { name: 'score-dsn4_3' type: "Convolution" bottom: 'conv4_3' top: 'score-dsn4_3'
  	param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  	convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#layer { name : "dropout" bottom: "score-dsn4_3" top: "score-dsn4_3" type: "Dropout"
 	# dropout_param { dropout_ratio: 0.5}}
layer { type: "Deconvolution" name: 'upsample_8-4_3' bottom: 'score-dsn4_3' top: 'score-dsn4_3-up'
  	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  	convolution_param { kernel_size: 16 stride: 8 num_output: 1 } }
layer { type: "Crop" name: 'crop' bottom: 'score-dsn4_3-up' bottom: 'input_sat' top: 'upscore-dsn4_3' }

###DSN conv 5_1 ###
layer { name: 'score-dsn5_1' type: "Convolution" bottom: 'conv5_1' top: 'score-dsn5_1'
  	param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  	convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#layer { name : "dropout" bottom: "score-dsn5_1" top: "score-dsn5_1" type: "Dropout"
 	# dropout_param { dropout_ratio: 0.5}}
layer { type: "Deconvolution" name: 'upsample_16-5_1' bottom: 'score-dsn5_1' top: 'score-dsn5_1-up'
  	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  	convolution_param { kernel_size: 32 stride: 16 num_output: 1 } }
layer { type: "Crop" name: 'crop' bottom: 'score-dsn5_1-up' bottom: 'input_sat' top: 'upscore-dsn5_1' }

###DSN conv 5_2 ###
layer { name: 'score-dsn5_2' type: "Convolution" bottom: 'conv5_2' top: 'score-dsn5_2'
  	param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  	convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#layer { name : "dropout" bottom: "score-dsn5_2" top: "score-dsn5_2" type: "Dropout"
 	# dropout_param { dropout_ratio: 0.5}}
layer { type: "Deconvolution" name: 'upsample_16-5_2' bottom: 'score-dsn5_2' top: 'score-dsn5_2-up'
  	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  	convolution_param { kernel_size: 32 stride: 16 num_output: 1 } }
layer { type: "Crop" name: 'crop' bottom: 'score-dsn5_2-up' bottom: 'input_sat' top: 'upscore-dsn5_2' }

###DSN conv 5_3 ###
layer { name: 'score-dsn5_3' type: "Convolution" bottom: 'conv5_3' top: 'score-dsn5_3'
  	param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  	convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 } }
#layer { name : "dropout" bottom: "score-dsn5_3" top: "score-dsn5_3" type: "Dropout"
 	# dropout_param { dropout_ratio: 0.5}}
layer { type: "Deconvolution" name: 'upsample_16-5_3' bottom: 'score-dsn5_3' top: 'score-dsn5_3-up'
  	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  	convolution_param { kernel_size: 32 stride: 16 num_output: 1 } }
layer { type: "Crop" name: 'crop' bottom: 'score-dsn5_3-up' bottom: 'input_sat' top: 'upscore-dsn5_3' }

### Concat, droptout and multiscale weight layer ###
layer { name: "concat-conv-pooling" 
	bottom: "upscore-dsn1_1" bottom: "upscore-dsn1_2" 
        bottom: "upscore-dsn2_1" bottom: "upscore-dsn2_2"
        bottom: "upscore-dsn3_1" bottom: "upscore-dsn3_2"
	bottom: "upscore-dsn3_3" bottom: "upscore-dsn4_1" 
	bottom: "upscore-dsn4_2" bottom: "upscore-dsn4_3"
	bottom: "upscore-dsn5_1" bottom: "upscore-dsn5_2" 
	bottom: "upscore-dsn5_3"  
	top: "concat-conv-pooling" 
	type: "Concat"
  	concat_param { concat_dim: 1} }
layer { name: 'new-score-weighting-conv-pooling' type: "Convolution" bottom: 'concat-conv-pooling' 		top: 'upscore-concat-conv-pooling'
  	param { lr_mult: 0.001 decay_mult: 1 } param { lr_mult: 0.002 decay_mult: 0}
  	convolution_param { engine: CAFFE num_output: 1 kernel_size: 1 weight_filler {type: 		"constant" value: 0.2} } }

layer {
  name: "sigmoid"
  type: "Sigmoid"
  bottom: "upscore-concat-conv-pooling"
  top: "bigscore"
}

